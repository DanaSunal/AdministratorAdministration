openapi: 3.0.0
info:
  title: AdministratorAdministration
  version: 0.0.1

servers:
  - url: 'https://10.118.125.157:1004'
    description: 'Initial deployment'

paths:
########################################
#   Service Layer - Individual Part
########################################
  /v1/regard-application:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: regardApplication
      summary: 'Adds to the list of applications'
      tags:
        - IndividualServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application-name
                - release-number
                - application-address
                - application-port
              properties:
                application-name:
                  type: string
                  description: >
                    'Name of application that shall be informed about where to inquire approvals of OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                release-number:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application that shall be informed about where to inquire approvals of OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                application-address:
                  type: string
                  pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                  description: >
                    'IP of application that shall be informed about where to inquire approvals of OaM requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-*/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]'
                application-port:      
                  type: integer
                  minimum: 0
                  maximum: 65535
                  description: >
                    'TCP port of application that shall be informed about where to inquire approvals of OaM requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-*/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port]'
              example:
                application-name: 'CurrentController'
                release-number: '0.0.6'
                application-address: '10.118.125.186'
                application-port: 2000
      responses:
        '204':
          description: 'Application will be requested to inquire approvals of OaM requests'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        informAboutWhereToCheckAdministratorCredentials:
          https://{$request.body#application-address}:{$request.body#application-port}/v1/inquire-oam-request-approvals:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - oam-approval-application
                        - oam-approval-application-release
                        - oam-approval-operation
                        - oam-approval-address
                        - oam-approval-port
                      properties:
                        oam-approval-application:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        oam-approval-application-release:
                          type: string
                          description: >
                            'Own release number
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                        oam-approval-operation:
                          type: string
                          description: >
                            'Own service for authenticating OaM requests
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
                        oam-approval-address:
                          type: string
                          description: >
                            'Own IP address
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]'
                        oam-approval-port:
                          type: integer
                          description: >
                            'Own TCP port
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/local-port]'
                      example:
                        oam-approval-application: 'AdministratorAdministration'
                        oam-approval-application-release: '0.0.1'
                        oam-approval-operation: '/v1/approve-oam-request'
                        oam-approval-address: '10.118.125.157'
                        oam-approval-port: 1004
              responses:
                '204':
                  description: 'Subscribed to OaM request records'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
  /v1/disregard-application:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: disregardApplication
      summary: 'Deletes the record of an application'
      tags:
        - IndividualServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application-name
                - release-number
              properties:
                application-name:
                  type: string
                  description: >
                    'Name of application that shall no longer get approvals of OaM requests
                    find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                release-number:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application that shall no longer get approvals of OaM requests
                    find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
              example:
                application-name: 'CurrentController'
                release-number: '0.0.6'
      responses:
        '204':
          description: 'Application will no longer be requested for notifications'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3001/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /v1/approve-oam-request:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: approveOamRequest
      summary: 'Checks authentication of an OaM request'
      tags:
        - IndividualServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application-name
                - release-number
                - authorization
                - method
              properties:
                application-name:
                  type: string
                  description: >
                    'Name of application inquiring for approval an OaM request
                    find [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                release-number:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application inquiring for approval an OaM request
                    find [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                authorization:
                  type: string
                  description: >
                    'Authorization code of administrator, who sent the OaM request
                    find [/core-model-1-4:control-construct/profile-collection/profile=aa-0-0-1-admin-p-*/admin-profile-1-0:admin-profile-pac/admin-profile-capability/authorization-code]'
                method:
                  type: string
                  enum:
                    - 'CONNECT'
                    - 'DELETE'
                    - 'GET'
                    - 'HEAD'
                    - 'OPTIONS'
                    - 'PATCH'
                    - 'POST'
                    - 'PUT'
                    - 'TRACE'
                  description: >
                    'Being covered by user rights of administrator identified by Authorization code
                    find [/core-model-1-4:control-construct/profile-collection/profile=aa-0-0-1-admin-p-*/admin-profile-1-0:admin-profile-pac/admin-profile-capability/allowed-methods]'
              example:
                application-name: 'RegistryOffice'
                release-number: '0.0.1'
                authorization: 'Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYHduEdBBdXRoIFBhc3N3b3JkPg=='
                method: 'PUT'
      responses:
        '200':
          description: 'Response on inquiry for approval of an OaM request provided'
          content:
            application/json:
              schema:
                type: object
                required:
                - oam-request-is-approved
                properties:
                  oam-request-is-approved:
                    type: boolean
                    description: >
                      'Would be true, IF
                      request::body::application-name could be found in [/core-model-1-4:control-construct/logical-termination-point={uuid1}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]
                      AND request::body::release-number could be found in [/core-model-1-4:control-construct/logical-termination-point={uuid1}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                      for the same value of uuid1
                      AND request::body::authorization could be found in [/core-model-1-4:control-construct/profile-collection/profile={uuid2}/admin-profile-1-0:admin-profile-pac/admin-profile-configuration/authorization]
                      AND method would be covered by [/core-model-1-4:control-construct/profile-collection/profile={uuid2}/admin-profile-1-0:admin-profile-pac/admin-profile-configuration/allowed-methods]
                      of the same value of uuid2.
                      Otherwise, would be false.'
                  reason-of-objection:
                    type: string
                    enum:
                      - 'APPLICATION_NAME_UNKNOWN'
                      - 'RELEASE_NUMBER_UNKNOWN'
                      - 'AUTHORIZATION_CODE_UNKNOWN'
                      - 'METHOD_NOT_ALLOWED'
                      - 'UNKNOWN'
                    description: >
                      'This attribute to be represented, if request::response::oam-request-is-approved==false.
                      Reasons to be checked and indicated according to the sequence defined in the enumeration.'
              examples:
                True:
                  value:
                    oam-request-is-approved: true
                False:
                  value:
                    oam-request-is-approved: false
                    reason-of-objection: 'AUTHORIZATION_CODE_UNKNOWN'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

########################################
#   Service Layer - Basic Part
########################################
  /v1/start-application-in-generic-representation:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: startApplicationInGenericRepresentation
      summary: 'Starts application in generic representation'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '200':
          description: 'Start mask provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - response-value-list
                  - consequent-action-list
                properties:
                  response-value-list:
                    type: array
                    minItems: 1
                    maxItems: 1
                    items:
                      type: object
                      required:
                        - field-name
                        - value
                        - datatype
                      properties:
                        field-name:
                          type: string
                          enum:
                            - 'applicationName'
                        value:
                          type: string
                          description: >
                            'Own application name
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        datatype:
                          type: string
                          enum:
                            - 'String'
                    example:
                      - field-name: 'applicationName'
                        value: 'AdministratorAdministration'
                        datatype: 'String'
                  consequent-action-list:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    maxItems: 1
                    items:
                      type: object
                      required:
                        - label
                        - request
                      properties:
                        label:
                          type: string
                          enum:
                            - 'Inform about Application'
                        request:
                          type: string
                          description: >
                            'https://
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]
                            :
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port]
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
                        input-value-list:
                          type: array
                          uniqueItems: true
                          maxItems: 0
                          items:
                            type: object
                            required:
                              - field-name
                            properties:
                              field-name:
                                type: string
                              unit:
                                type: string
                    example:
                      - label: 'Inform about Application'
                        request: 'https://10.118.125.157:1004/v1/inform-about-application-in-generic-representation'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /v1/inform-about-application:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: inform-about-application
      summary: 'Returns administrative information'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '200':
          description: 'Administrative information provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - application-name
                  - release-number
                  - application-purpose
                  - data-update-period
                  - owner-name
                  - owner-email-address
                properties:
                  application-name:
                    type: string
                    enum:
                      - 'AdministratorAdministration'
                    description: >
                      'Own application name
                      from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                  release-number:
                    type: string
                    description: >
                      'Own release number
                      from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                  application-purpose:
                    type: string
                    description: >
                      'Own release number
                      from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose]'
                  data-update-period:
                    type: string
                    enum:
                      - 'real-time'
                      - '1h-period'
                      - '24h-period'
                      - 'manual'
                    description: 'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period]'
                  owner-name:
                    type: string
                    description: 'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name]'
                  owner-email-address:
                    type: string
                    description: 'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address]'
                example:
                  application-name: 'AdministratorAdministration'
                  release-number: '0.0.1'
                  application-purpose: 'Authenticates OaM requests.'
                  data-update-period: 'real-time'
                  owner-name: 'Thorsten Heinze'
                  owner-email-address: 'Thorsten.Heinze@telefonica.com'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2001/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /v1/inform-about-application-in-generic-representation:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: informAboutApplicationInGenericRepresentation
      summary: 'Returns administrative information for generic representation'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '200':
          description: 'Administrative information provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - response-value-list
                  - consequent-action-list
                properties:
                  response-value-list:
                    type: array
                    uniqueItems: true
                    minItems: 6
                    maxItems: 6
                    items:
                      type: object
                      required:
                        - field-name
                        - value
                        - datatype
                      properties:
                        field-name:
                          type: string
                          enum:
                            - applicationName
                            - releaseNumber
                            - applicationPurpose
                            - dataUpdatePeriod
                            - ownerName
                            - ownerEmailAddress
                        value:
                          type: string
                          description: >
                            'from either
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]
                            or
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]
                            or
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose]
                            or
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period]
                            or
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name]
                            or
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address]'
                        datatype:
                          type: string
                          enum:
                            - 'String'
                    example:
                      - field-name: 'applicationName'
                        value: 'AdministratorAdministration'
                        datatype: 'String'
                      - field-name: 'releaseNumber'
                        value: '0.0.1'
                        datatype: 'String'
                      - field-name: 'applicationPurpose'
                        value: 'Authenticates OaM requests.'
                        datatype: 'String'
                      - field-name: 'dataUpdatePeriod'
                        value: 'real-time'
                        datatype: 'String'
                      - field-name: 'ownerName'
                        value: 'Thorsten Heinze'
                        datatype: 'String'
                      - field-name: 'ownerEmailAddress'
                        value: 'Thorsten.Heinze@telefonica.com'
                        datatype: 'String'
                  consequent-action-list:
                    type: array
                    uniqueItems: true
                    minItems: 2
                    maxItems: 2
                    items:
                      type: object
                      required:
                        - label
                        - request
                      properties:
                        label:
                          type: string
                          enum:
                            - 'Release History'
                            - 'API Documentation'
                        request:
                          type: string
                          description: >
                            'https://
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]
                            :
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port]
                            and either
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2004/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]
                            or
                            /v1/inform-about-api'
                        input-value-list:
                          type: array
                          uniqueItems: true
                          maxItems: 0
                          items:
                            type: object
                            required:
                              - field-name
                            properties:
                              field-name:
                                type: string
                              unit:
                                type: string
                    example:
                      - label: 'Release History'
                        request: 'https://10.118.125.157:1004/v1/inform-about-release-history-in-generic-representation'
                      - label: 'API Documentation'
                        request: 'https://10.118.125.157:1004/v1/inform-about-api'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /v1/inform-about-release-history:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: informAboutReleaseHistory
      summary: 'Returns release history'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '200':
          description: 'Release history provided'
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  type: object
                  required:
                    - release-number
                    - release-date
                    - changes
                  properties:
                    release-number:
                      type: string
                      description: 'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list/release-number=*/release-number]'
                    release-date:
                      type: string
                      description: 'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list/release-number=*/release-date]'
                    changes:
                      type: string
                      description: 'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list/release-number=*/changes]'
                example:
                  - release-number: '0.0.1'
                    release-date: '27.08.2021'
                    changes: 'Initial version.'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2003/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /v1/inform-about-release-history-in-generic-representation:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: informAboutReleaseHistoryInGenericRepresentation
      summary: 'Returns release history for generic representation'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '200':
          description: 'Release history provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - response-value-list
                  - consequent-action-list
                properties:
                  response-value-list:
                    type: array
                    uniqueItems: true
                    items:
                      type: object
                      required:
                        - field-name
                        - value
                        - datatype
                      properties:
                        field-name:
                          type: string
                          description: >
                            'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list=*/release-number]'
                        value:
                          type: string
                          description: >
                            'from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list=*/release-date]
                             - 
                            [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list=*/changes]'
                        datatype:
                          type: string
                          enum:
                            - 'String'
                    example:
                      - field-name: '0.0.1'
                        value: '27.08.2021 - Initial version.'
                        datatype: 'String'
                  consequent-action-list:
                    type: array
                    uniqueItems: true
                    maxItems: 0
                    items:
                      type: object
                      required:
                        - label
                        - request
                        - input-value-list
                      properties:
                        label:
                          type: string
                        request:
                          type: string
                        input-value-list:
                          type: array
                          uniqueItems: true
                          maxItems: 0
                          items:
                            type: object
                            required:
                              - field-name
                            properties:
                              field-name:
                                type: string
                              unit:
                                type: string
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-2004/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /v1/register-yourself:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: registerYourself
      summary: 'Announcing itself to the RegistryOffice'
      description: 'Shall automatically execute without receiving any request every time the application starts'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '204':
          description: 'Will register at the RegistryOffice'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-0000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        registryNotification:
          https://[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]:[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port][/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-0000/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - application-name
                        - release-number
                        - application-address
                        - application-port
                      properties:
                        application-name:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        release-number:
                          type: string
                          description: >
                            'Own release number
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                        application-address:
                          type: string
                          description: >
                            'Own IP address
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]'
                        application-port:
                          type: integer
                          description: >
                            'Own TCP port
                            from[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port]'
                      example:
                        application-name: 'AdministratorAdministration'
                        release-number: '0.0.1'
                        application-address: '10.118.125.157'
                        application-port: 1004
              responses:
                '204':
                  description: 'Application registered'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
  /v1/embed-yourself:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: embedYourself
      summary: 'Embed yourself into the MBH SDN application layer'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      responses:
        '204':
          description: 'Will embed into the MBH SDN application layer'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-0001/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        creatingClientsToAllAlreadyApprovedApplications:
          https://[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]:[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port][/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-3004/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              responses:
                '200':
                  description: 'List of applications provided'
                  content:
                    application/json:
                      schema:
                        type: array
                        uniqueItems: true
                        items:
                          type: object
                          required:
                          - application-name
                          - release-number
                          - application-address
                          - application-port
                          - approval-status
                          properties:
                            application-name:
                              type: string
                              description: >
                                'find or create in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                            release-number:
                              type: string
                              description: >
                                'find or create in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                            application-address:
                              type: string
                              description: >
                                'update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-*/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]'
                            application-port:      
                              type: integer
                              description: >
                                'update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-*/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port]'
                            approval-status:
                              type: string
                              description: >
                                'Filter on APPROVED applications. Value not to be stored.'
                        example:
                          - application-name: 'TypeApprovalRegister'
                            release-number: '0.0.1'
                            application-address: '10.118.125.157'
                            application-port: 1001
                            approval-status: 'APPROVED'
                          - application-name: 'ExecutionAndTraceLog'
                            release-number: '0.0.1'
                            application-address: '10.118.125.157'
                            application-port: 1002
                            approval-status: 'APPROVED'
                          - application-name: 'OamLog'
                            release-number: '0.0.1'
                            application-address: '10.118.125.157'
                            application-port: 1003
                            approval-status: 'APPROVED'
                          - application-name: 'CurrentController'
                            release-number: '0.0.6'
                            application-address: '10.118.125.186'
                            application-port: 2000
                            approval-status: 'APPROVED'
                          - application-name: 'Resolver'
                            release-number: '0.0.1'
                            application-address: '10.118.125.186'
                            application-port: 2001
                            approval-status: 'REGISTERED'
                          - application-name: 'Connector2LtpUuid'
                            release-number: '0.0.1'
                            application-address: '10.118.125.186'
                            application-port: 2002
                            approval-status: 'REGISTERED'
                          - application-name: 'BadApplication'
                            release-number: '0.0.1'
                            application-address: '10.118.125.186'
                            application-port: 9999
                            approval-status: 'BARRED'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: >
                          'Life cyle state of the consumed service
                          find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3003/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
        requestAllAlreadyApprovedApplicationsToInquireOamRequestApprovals:
          https://[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-*/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]:[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-*/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port]/v1/inquire-oam-request-approvals:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - oam-approval-application
                        - oam-approval-application-release
                        - oam-approval-operation
                        - oam-approval-address
                        - oam-approval-port
                      properties:
                        oam-approval-application:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        oam-approval-application-release:
                          type: string
                          description: >
                            'Own release number
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                        oam-approval-operation:
                          type: string
                          description: >
                            'Own service for authenticating OaM requests
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
                        oam-approval-address:
                          type: string
                          description: >
                            'Own IP address
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]'
                        oam-approval-port:
                          type: integer
                          description: >
                            'Own TCP port
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/local-port]'
                      example:
                        oam-approval-application: 'AdministratorAdministration'
                        oam-approval-application-release: '0.0.1'
                        oam-approval-operation: '/v1/approve-oam-request'
                        oam-approval-address: '10.118.125.157'
                        oam-approval-port: 1004
              responses:
                '204':
                  description: 'Subscribed to OaM request records'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
        subscribingForNotificationsAboutApprovalsAtTheRegistryOffice:
          https://[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]:[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port][/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-3002/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - subscriber-application
                        - subscriber-release
                        - subscriber-operation
                        - subscriber-address
                        - subscriber-port
                      properties:
                        subscriber-application:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        subscriber-release:
                          type: string
                          description: >
                            'Own release number
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                        subscriber-operation:
                          type: string
                          description: >
                            'Own operation that shall be addressed by notifications about new approvals
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
                        subscriber-address:
                          type: string
                          description: >
                            'Own IP address
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]'
                        subscriber-port:      
                          type: integer
                          description: >
                            'Own TCP port
                            from[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port]'
                      example:
                        subscriber-application: 'AdministratorAdministration'
                        subscriber-release: '0.0.1'
                        subscriber-operation: '/v1/regard-application'
                        subscriber-address: '10.118.125.157'
                        subscriber-port: 1004
              responses:
                '204':
                  description: 'Subscribed for notifications about new approvals'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
        subscribingForNotificationsAboutWithdrawnApprovalsOrDeregistrationsAtTheRegistryOffice:
          https://[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]:[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port][/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-3003/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - subscriber-application
                        - subscriber-release
                        - subscriber-operation
                        - subscriber-address
                        - subscriber-port
                      properties:
                        subscriber-application:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        subscriber-release:
                          type: string
                          description: >
                            'Own release number
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                        subscriber-operation:
                          type: string
                          description: >
                            'Own operation to be addressed by notifications about withdrawn approvals'
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-3001/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
                        subscriber-address:
                          type: string
                          description: >
                            'Own IP address
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address/ipv-4-address]'
                        subscriber-port:      
                          type: integer
                          description: >
                            'Own TCP port
                            from[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port]'
                      example:
                        subscriber-application: 'AdministratorAdministration'
                        subscriber-release: '0.0.1'
                        subscriber-operation: '/v1/disregard-application'
                        subscriber-address: '10.118.125.157'
                        subscriber-port: 1004
              responses:
                '204':
                  description: 'Subscribed for notifications about withdrawn approvals'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
  /v1/notify-service-requests:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: notifyServiceRequests
      summary: 'Offers subscription to execution and tracing notifications'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - service-log-application
                - service-log-application-release-number
                - service-log-operation
                - service-log-address
                - service-log-port
              properties:
                service-log-application:
                  type: string
                  description: >
                    'Name of application that shall record the service requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-0020/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                service-log-application-release-number:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application that shall record the service requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-0020/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                service-log-operation:
                  type: string
                  description: >
                    'Operation for recording the service requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-0020/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]'
                service-log-address:
                  type: string
                  pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                  description: >
                    'IP address of application that shall record the service requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0020/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]'
                service-log-port:
                  type: integer
                  minimum: 0
                  maximum: 65535
                  description: >
                    'Port of application that shall record the service requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0020/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port]'
              example:
                service-log-application: 'ExecutionAndTraceLog'
                service-log-application-release-number: '0.0.1'
                service-log-operation: '/v1/record-service-request'
                service-log-address: '10.118.125.157'
                service-log-port: 1002
      responses:
        '204':
          description: 'Subscribed to service request records'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-0002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        serviceRequestNotification:
          https://{$request.body#service-log-address}:{$request.body#service-log-port}{$request.body#service-log-operation}:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - x-correlator
                        - trace-indicator
                        - user
                        - originator
                        - application-name
                        - operation-name
                        - response-code
                      properties:
                        x-correlator:
                          type: string
                          description: 'UUID for the service execution flow that allows to correlate requests and responses; as defined in all service headers [x-correlator]'
                        trace-indicator:
                          type: string
                          description: 'Sequence of request numbers along the flow; as defined in all service headers [trace-indicator]'
                        user:
                          type: string
                          description: 'User identifier from the system starting the service call; as defined in all service headers [user]'
                        originator:
                          type: string
                          description: 'ApplicationName on the client side; as defined in all service headers [originator]'
                        application-name:
                          type: string
                          description: '[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        operation-name:
                          type: string
                          description: '[/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-*/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
                        response-code:
                          type: integer
                          description: 'Response code sent to [originator] after invoking [operation-name] at [application-name]'
                        timestamp:
                          type: string
                          pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([Zz])|([\+|\-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                          description: 'Date and time when [application-name] sent response to [originator]'
                        stringified-body:
                          type: string
                          description: 'Stringified body of the request addressed from [originator] to [application-name]'
                        stringified-response:
                          type: string
                          description: 'Stringified response sent from [application-name] to [originator]'
                      example:
                        x-correlator: '550e8400-e29b-11d4-a716-446655440000'
                        trace-indicator: '1.1'
                        user: 'User Name'
                        originator: 'Resolver'
                        application-name: 'RegistryOffice'
                        operation-name: '/v1/register-application'
                        response-code: 500
                        timestamp: '2010-11-20T14:00:00+01:00'
                        stringified-body: ''
                        stringified-response: ''
              responses:
                '204':
                  description: 'Request recorded'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
  /v1/notify-oam-requests:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: notifyOamRequests
      summary: 'Offers subscription to OaM change notifications'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oam-log-application
                - oam-log-application-release-number
                - oam-log-operation
                - oam-log-address
                - oam-log-port
              properties:
                oam-log-application:
                  type: string
                  description: >
                    'Name of application that shall record the OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-0030/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                oam-log-application-release-number:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application that shall record the OaM request
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-0030/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                oam-log-operation:
                  type: string
                  description: >
                    'Operation for recording the OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-0030/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]'
                oam-log-address:
                  type: string
                  pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                  description: >
                    'IP address of application that shall record the OaM requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0030/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]'
                oam-log-port:
                  type: integer
                  minimum: 0
                  maximum: 65535
                  description: >
                    'Port of application that shall record the OaM requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0030/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port]'
              example:
                oam-log-application: 'OamLog'
                oam-log-application-release-number: '0.0.1'
                oam-log-operation: '/v1/record-oam-request'
                oam-log-address: '10.118.125.157'
                oam-log-port: 1003
      responses:
        '204':
          description: 'Subscribed to OaM request records'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-0003/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        oamValueChangeNotification:
          https://{$request.body#oam-log-address}:{$request.body#oam-log-port}{$request.body#oam-log-operation}:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - application-name
                        - method
                        - resource
                        - stringified-body
                        - response-code
                        - authorization
                        - timestamp
                      properties:
                        application-name:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name 
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        method:
                          type: string
                          enum:
                            - 'CONNECT'
                            - 'DELETE'
                            - 'GET'
                            - 'HEAD'
                            - 'OPTIONS'
                            - 'PATCH'
                            - 'POST'
                            - 'PUT'
                            - 'TRACE'
                          description: 'Method applied in the OaM request, which is to be recorded'
                        resource:
                          type: string
                          description: 'Resource addressed by the OaM request, which is to be recorded'
                        stringified-body:
                          type: string
                          description: 'Stringified body of the OaM request, which is to be recorded'
                        response-code:
                          type: integer
                          description: 'Response code answered to the OaM request, which is to be recorded'
                        authorization:
                          type: string
                          description: 'Authorization header of the OaM request, which is to be recorded'
                        timestamp:
                          type: string
                          pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([Zz])|([\+|\-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                          description: 'Date and time when the response to the OaM request, which is to be recorded, has been sent'
                      example:
                        application-name: 'AdministratorAdministration'
                        method: 'PUT'
                        resource: '/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-s-0000/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port'
                        stringified-body: '{"tcp-server-interface-1-0:local-port":"1000"}'
                        response-code: 204
                        authorization: 'Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYHduEdBBdXRoIFBhc3N3b3JkPg=='
                        timestamp: '2010-11-20T14:00:00+01:02'
              responses:
                '204':
                  description: 'OaM request recorded'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'
  /v1/end-subscription:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: endSubscription
      summary: 'Stops sending notifications of a specific subscription'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subscriber-application
                - subscriber-release
                - subscription
              properties:
                subscriber-application:
                  type: string
                  description: >
                    'Name of application that no longer wants to receive notifications
                    find [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                subscriber-release:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application that no longer wants to receive notifications
                    find [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-*/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                subscription:
                  type: string
                  description: >
                    'Name of operation that had been addressed for starting getting notifications
                    find [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-*/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name]'
            examples:
              StopNotifyingServiceRequests:
                value:
                  subscriber-application: 'ExecutionAndTraceLog'
                  subscriber-release: '0.0.1'
                  subscription: '/v1/notify-service-requests'
              StopNotifyingOamRequests:
                value:
                  subscriber-application: 'OamLog'
                  subscriber-release: '0.0.1'
                  subscription: '/v1/notify-oam-requests'
      responses:
        '204':
          description: 'Stopped sending notifications of a specific subscription'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-0004/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /v1/inquire-oam-request-approvals:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/originator'
      - $ref: '#/components/parameters/x-correlator'
      - $ref: '#/components/parameters/trace-indicator'
      - $ref: '#/components/parameters/customer-journey'
    post:
      operationId: inquireOamRequestApprovals
      summary: 'Receives information about where to ask for approval of OaM requests'
      tags:
        - BasicServices
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oam-approval-application
                - oam-approval-application-release
                - oam-approval-operation
                - oam-approval-address
                - oam-approval-port
              properties:
                oam-approval-application:
                  type: string
                  description: >
                    'Name of application that shall approve the OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-0040/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
                oam-approval-application-release:
                  type: string
                  pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                  description: >
                    'Release of application that shall approve the OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-c-0040/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number]'
                oam-approval-operation:
                  type: string
                  description: >
                    'Operation for approving the OaM requests
                    find or create [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-0040/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]'
                oam-approval-address:
                  type: string
                  pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                  description: >
                    'IP address of application that shall approve the OaM requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0040/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]'
                oam-approval-port:
                  type: integer
                  minimum: 0
                  maximum: 65535
                  description: >
                    'Port of application that shall approve the OaM requests
                    create or update [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-tcp-c-0040/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port]'
              example:
                oam-approval-application: 'AdministratorAdministration'
                oam-approval-application-release: '0.0.1'
                oam-approval-operation: '/v1/approve-oam-request'
                oam-approval-address: '10.118.125.157'
                oam-approval-port: 1004
      responses:
        '204':
          description: 'Informed about where to inquire for approval of OaM requests'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
            life-cycle-state:
              schema:
                type: string
                enum:
                  - 'EXPERIMENTAL'
                  - 'OPERATIONAL'
                  - 'DEPRICATED'
                  - 'OBSOLETE'
                  - 'UNKNOWN'
                  - 'NOT_YET_DEFINED'
                example: 'EXPERIMENTAL'
              description: >
                  'Life cyle state of the consumed service
                  find in [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-s-0003/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configurationy/life-cycle-state]'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        alsoTheAdministratorAdministrationApplicationShallCheckOamRequestsForAuthorization:
          https://{$request.body#oam-approval-address}:{$request.body#oam-approval-port}{$request.body#oam-approval-operation}:
            parameters:
              - $ref: '#/components/parameters/user'
              - $ref: '#/components/parameters/originator'
              - $ref: '#/components/parameters/x-correlator'
              - $ref: '#/components/parameters/trace-indicator'
              - $ref: '#/components/parameters/customer-journey'
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - application-name
                        - release-number
                        - authorization
                        - method
                      properties:
                        application-name:
                          type: string
                          enum:
                            - 'AdministratorAdministration'
                          description: >
                            'Own application name for the AdministratorAdministration to check, whether this application is part of the SDN at all
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name]'
                        release-number:
                          type: string
                          description: >
                            'Own application release number for the AdministratorAdministration to check, whether this application is part of the SDN at all
                            from [/core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-http-s-0000/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number]'
                        authorization:
                          type: string
                          description: > 
                            'Authorization code of the administrator addressing the OaM request to this application from [parameters::Authorization]'
                        method:
                          type: string
                          enum:
                            - 'CONNECT'
                            - 'DELETE'
                            - 'GET'
                            - 'HEAD'
                            - 'OPTIONS'
                            - 'PATCH'
                            - 'POST'
                            - 'PUT'
                            - 'TRACE'
                          description: 'Method applied in the OaM request, which is to be recorded'
                      example:
                        application-name: 'AdministratorAdministration'
                        release-number: '0.0.1'
                        authorization: 'Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYHduEdBBdXRoIFBhc3N3b3JkPg=='
                        method: 'PUT'
              responses:
                '204':
                  description: 'OaM request recorded'
                  headers:
                    x-correlator:
                      schema: 
                        type: string
                        example: '550e8400-e29b-11d4-a716-446655440000'
                      description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
                    exec-time:
                      schema:
                        type: integer
                        example: 1100
                      description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
                    backend-time:
                      schema:
                        type: integer
                        example: 850
                      description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
                    life-cycle-state:
                      schema:
                        type: string
                        enum:
                          - 'EXPERIMENTAL'
                          - 'OPERATIONAL'
                          - 'DEPRICATED'
                          - 'OBSOLETE'
                          - 'UNKNOWN'
                          - 'NOT_YET_DEFINED'
                        example: 'EXPERIMENTAL'
                      description: 'Life cyle state of the consumed service'
                '400':
                  $ref: '#/components/responses/invalidSyntax'
                '401':
                  $ref: '#/components/responses/unauthorized'
                '403':
                  $ref: '#/components/responses/forbidden'
                '404':
                  $ref: '#/components/responses/notfound'
                '500':
                  $ref: '#/components/responses/serverError'
                default:
                  $ref: '#/components/responses/default'

########################################
#   OAM Layer - Individual Part
########################################
  /core-model-1-4:control-construct/profile-collection:
    parameters:
      - in: query
        name: fields
        required: true
        allowReserved: true
        schema:
          type: string
          enum:
            - 'profile(uuid)'
    get:
      operationId: getProfileCollectionFilteredOnUuid
      summary: 'Returns list of UUIDs at Profiles'
      tags:
        - Core
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'List of UUIDs at Profiles provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - core-model-1-4:profile-collection
                properties:
                  core-model-1-4:profile-collection:
                    type: object
                    required:
                      - profile
                    properties:
                      profile:
                        type: array
                        uniqueItems: true
                        items:
                          type: object
                          required:
                            - uuid
                          properties:
                            uuid:
                              type: string
                              pattern: '^aa-0-0-1-admin-p-\d{4}$'
                        example:
                          - uuid: 'aa-0-0-1-admin-p-0000'
                          - uuid: 'aa-0-0-1-admin-p-0001'
                          - uuid: 'aa-0-0-1-admin-p-0002'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

########################################
#   OAM Layer - Basic Part
########################################
  /core-model-1-4:control-construct:
    get:
      operationId: getControlConstruct
      summary: 'Returns entire data tree'
      tags:
        - Core
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'ControlConstruct provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - core-model-1-4:control-construct
                properties:
                  core-model-1-4:control-construct:
                    type: object
                    required:
                      - profile-collection
                      - logical-termination-point
                    properties:
                      profile-collection:
                        type: object
                        required:
                          - profile
                        properties:
                          profile:
                            type: array
                            uniqueItems: true
                            items:
                              anyOf:
                                - description: 'admin profile'
                                  type: object
                                  required:
                                    - uuid
                                    - profile-name
                                    # Bug in the postman mock server
                                    # original code is:
                                    # - admin-profile-1-0:admin-profile-pac
                                    # workaround code is:
                                    # - empty line -
                                  properties:
                                    uuid:
                                      type: string
                                      pattern: '^aa-0-0-1-admin-p-\d{4}$'
                                    profile-name:
                                      type: string
                                      enum:
                                        - 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                        - 'string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE'
                                        - 'integer-profile-1-0:PROFILE_NAME_TYPE_INTEGER_PROFILE'
                                        - 'application-profile-1-0:PROFILE_NAME_TYPE_APPLICATION_PROFILE'
                                        - 'service-record-profile-1-0:PROFILE_NAME_TYPE_SERVICE_RECORD_PROFILE'
                                        - 'oam-record-profile-1-0:PROFILE_NAME_TYPE_OAM_RECORD_PROFILE'
                                    admin-profile-1-0:admin-profile-pac:
                                      type: object
                                      required:
                                        - admin-profile-capability
                                        - admin-profile-configuration
                                      properties:
                                        admin-profile-capability:
                                          type: object
                                          required:
                                            - administrator-name
                                          properties:
                                            administrator-name:
                                              type: string
                                        admin-profile-configuration:
                                          type: object
                                          required:
                                            - authorization
                                            - allowed-methods
                                          properties:
                                            authorization:
                                              type: string
                                            allowed-methods:
                                              type: string
                                              enum:
                                                - 'admin-profile-1-0:ALLOWED_METHODS_TYPE_GET'
                                                - 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
                                - description: 'string profile'
                                  type: object
                                  required:
                                    - uuid
                                    - profile-name
                                    - string-profile-1-0:string-profile-pac
                                  properties:
                                    uuid:
                                      type: string
                                      pattern: '^aa-0-0-1-string-p-\d{4}$'
                                    profile-name:
                                      type: string
                                      enum:
                                        - 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                        - 'string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE'
                                        - 'integer-profile-1-0:PROFILE_NAME_TYPE_INTEGER_PROFILE'
                                        - 'application-profile-1-0:PROFILE_NAME_TYPE_APPLICATION_PROFILE'
                                        - 'service-record-profile-1-0:PROFILE_NAME_TYPE_SERVICE_RECORD_PROFILE'
                                        - 'oam-record-profile-1-0:PROFILE_NAME_TYPE_OAM_RECORD_PROFILE'
                                    string-profile-1-0:string-profile-pac:
                                      type: object
                                      required:
                                        - string-profile-capability
                                        - string-profile-configuration
                                      properties:
                                        string-profile-capability:
                                          type: object
                                          required:
                                            - string-name
                                          properties:
                                            string-name:
                                              type: string
                                        string-profile-configuration:
                                          type: object
                                          required:
                                            - string-value
                                          properties:
                                            string-value:
                                              type: string
                                - description: 'integer profile'
                                  type: object
                                  required:
                                    - uuid
                                    - profile-name
                                    - integer-profile-1-0:integer-profile-pac
                                  properties:
                                    uuid:
                                      type: string
                                      pattern: '^aa-0-0-1-integer-p-\d{4}$'
                                    profile-name:
                                      type: string
                                      enum:
                                        - 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                        - 'string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE'
                                        - 'integer-profile-1-0:PROFILE_NAME_TYPE_INTEGER_PROFILE'
                                        - 'application-profile-1-0:PROFILE_NAME_TYPE_APPLICATION_PROFILE'
                                        - 'service-record-profile-1-0:PROFILE_NAME_TYPE_SERVICE_RECORD_PROFILE'
                                        - 'oam-record-profile-1-0:PROFILE_NAME_TYPE_OAM_RECORD_PROFILE'
                                    integer-profile-1-0:integer-profile-pac:
                                      type: object
                                      required:
                                        - integer-profile-capability
                                        - integer-profile-configuration
                                      properties:
                                        integer-profile-capability:
                                          type: object
                                          required:
                                            - integer-name
                                          properties:
                                            integer-name:
                                              type: string
                                            unit:
                                              type: string
                                            minimum:
                                              type: integer
                                            maximum:
                                              type: integer
                                        integer-profile-configuration:
                                          type: object
                                          required:
                                            - integer-value
                                          properties:
                                            integer-value:
                                              type: integer
                                - description: 'application profile'
                                  type: object
                                  required:
                                    - uuid
                                    - profile-name
                                    - application-profile-1-0:application-profile-pac
                                  properties:
                                    uuid:
                                      type: string
                                      pattern: '^aa-0-0-1-application-p-\d{4}$'
                                    profile-name:
                                      type: string
                                      enum:
                                        - 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                        - 'string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE'
                                        - 'integer-profile-1-0:PROFILE_NAME_TYPE_INTEGER_PROFILE'
                                        - 'application-profile-1-0:PROFILE_NAME_TYPE_APPLICATION_PROFILE'
                                        - 'service-record-profile-1-0:PROFILE_NAME_TYPE_SERVICE_RECORD_PROFILE'
                                        - 'oam-record-profile-1-0:PROFILE_NAME_TYPE_OAM_RECORD_PROFILE'
                                    application-profile-1-0:application-profile-pac:
                                      type: object
                                      required:
                                        - application-profile-capability
                                        - application-profile-configuration
                                      properties:
                                        application-profile-capability:
                                          type: object
                                          required:
                                            - application-name
                                            - release-number
                                          properties:
                                            application-name:
                                              type: string
                                            release-number:
                                              type: string
                                        application-profile-configuration:
                                          type: object
                                          required:
                                            - approval-status
                                          properties:
                                            approval-status:
                                              type: string
                                              enum:
                                                - 'application-profile-1-0:APPROVAL_STATUS_TYPE_REGISTERED'
                                                - 'application-profile-1-0:APPROVAL_STATUS_TYPE_APPROVED'
                                                - 'application-profile-1-0:APPROVAL_STATUS_TYPE_BARRED'
                                                - 'application-profile-1-0:APPROVAL_STATUS_TYPE_NOT_YET_DEFINED'
                                - description: 'service record profile'
                                  type: object
                                  required:
                                    - uuid
                                    - profile-name
                                    - service-record-profile-1-0:service-record-profile-pac
                                  properties:
                                    uuid:
                                      type: string
                                      pattern: '^aa-0-0-1-service-record-p-\d{6}$'
                                    profile-name:
                                      type: string
                                      enum:
                                        - 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                        - 'string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE'
                                        - 'integer-profile-1-0:PROFILE_NAME_TYPE_INTEGER_PROFILE'
                                        - 'application-profile-1-0:PROFILE_NAME_TYPE_APPLICATION_PROFILE'
                                        - 'service-record-profile-1-0:PROFILE_NAME_TYPE_SERVICE_RECORD_PROFILE'
                                        - 'oam-record-profile-1-0:PROFILE_NAME_TYPE_OAM_RECORD_PROFILE'
                                    service-record-profile-1-0:service-record-profile-pac:
                                      type: object
                                      required:
                                        - service-record-profile-capability
                                      properties:
                                        service-record-profile-capability:
                                          type: object
                                          required:
                                            - x-correlator
                                            - trace-indicator
                                            - user
                                            - originator
                                            - application-name
                                            - operation-name
                                            - response-code
                                          properties:
                                            x-correlator:
                                              type: string
                                            trace-indicator:
                                              type: string
                                            user:
                                              type: string
                                            originator:
                                              type: string
                                            application-name:
                                              type: string
                                            operation-name:
                                              type: string
                                            response-code:
                                              type: integer
                                            timestamp:
                                              type: string
                                            stringified-body:
                                              type: string
                                            stringified-response:
                                              type: string
                                - description: 'oam record profile'
                                  type: object
                                  required:
                                    - uuid
                                    - profile-name
                                    - oam-record-profile-1-0:oam-record-profile-pac
                                  properties:
                                    uuid:
                                      type: string
                                      pattern: '^aa-0-0-1-oam-record-p-\d{6}$'
                                    profile-name:
                                      type: string
                                      enum:
                                        - 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                        - 'string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE'
                                        - 'integer-profile-1-0:PROFILE_NAME_TYPE_INTEGER_PROFILE'
                                        - 'application-profile-1-0:PROFILE_NAME_TYPE_APPLICATION_PROFILE'
                                        - 'service-record-profile-1-0:PROFILE_NAME_TYPE_SERVICE_RECORD_PROFILE'
                                        - 'oam-record-profile-1-0:PROFILE_NAME_TYPE_OAM_RECORD_PROFILE'
                                    oam-record-profile-1-0:oam-record-profile-pac:
                                      type: object
                                      required:
                                        - oam-record-profile-capability
                                      properties:
                                        oam-record-profile-capability:
                                          type: object
                                          required:
                                            - application-name
                                            - method
                                            - resource
                                            - stringified-body
                                            - response-code
                                            - authorization
                                            - timestamp
                                          properties:
                                            application-name:
                                              type: string
                                            method:
                                              type: string
                                              enum:
                                                - 'oam-record-profile-1-0:METHOD_TYPE_GET'
                                                - 'oam-record-profile-1-0:METHOD_TYPE_PUT'
                                                - 'oam-record-profile-1-0:METHOD_TYPE_CREATE'
                                                - 'oam-record-profile-1-0:METHOD_TYPE_DELETE'
                                            resource:
                                              type: string
                                            stringified-body:
                                              type: string
                                            response-code:
                                              type: integer
                                            authorization:
                                              type: string
                                            timestamp:
                                              type: string
                            example:
                              - uuid: 'aa-0-0-1-admin-p-0000'
                                profile-name: 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                admin-profile-1-0:admin-profile-pac:
                                  admin-profile-capability:
                                    administrator-name: 'Thorsten Heinze'
                                  admin-profile-configuration:
                                    authorization: ' *** Basic Ath Code *** '
                                    allowed-methods: 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
                              - uuid: 'aa-0-0-1-admin-p-0001'
                                profile-name: 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                admin-profile-1-0:admin-profile-pac:
                                  admin-profile-capability:
                                    administrator-name: 'Prathiba Jeevan'
                                  admin-profile-configuration:
                                    authorization: ' *** Basic Ath Code *** '
                                    allowed-methods: 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
                              - uuid: 'aa-0-0-1-admin-p-0002'
                                profile-name: 'admin-profile-1-0:PROFILE_NAME_TYPE_ADMIN_PROFILE'
                                admin-profile-1-0:admin-profile-pac:
                                  admin-profile-capability:
                                    administrator-name: 'Iswaryaa Subashchandran'
                                  admin-profile-configuration:
                                    authorization: ' *** Basic Ath Code *** '
                                    allowed-methods: 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
                      logical-termination-point:
                        type: array
                        uniqueItems: true
                        items:
                          type: object
                          required:
                            - uuid
                            - ltp-direction
                            - client-ltp
                            - server-ltp
                            - layer-protocol
                          properties:
                            uuid:
                              type: string
                            ltp-direction:
                              type: string
                              enum:
                                - 'core-model-1-4:TERMINATION_DIRECTION_BIDIRECTIONAL'
                                - 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                                - 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                                - 'core-model-1-4:TERMINATION_DIRECTION_UNDEFINED_OR_UNKNOWN'
                            client-ltp:
                              type: array
                              uniqueItems: true
                              items:
                                type: string
                            server-ltp:
                              type: array
                              uniqueItems: true
                              items:
                                type: string
                            layer-protocol:
                              type: array
                              minItems: 1
                              maxItems: 1
                              items:
                                oneOf:
                                  - description: 'operation server'
                                    type: object
                                    required:
                                      - local-id
                                      - layer-protocol-name
                                      # Bug in the postman mock server
                                      # original code is:
                                      # - operation-server-interface-1-0:operation-server-interface-pac
                                      # workaround code is:
                                      # - empty line -
                                    properties:
                                      local-id:
                                        type: string
                                      layer-protocol-name:
                                        type: string
                                        enum:
                                          - 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                          - 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                      operation-server-interface-1-0:operation-server-interface-pac:
                                        type: object
                                        required:
                                          - operation-server-interface-capability
                                          - operation-server-interface-configuration
                                        properties:
                                          operation-server-interface-capability:
                                            type: object
                                            required:
                                              - operation-name
                                            properties:
                                              operation-name:
                                                type: string
                                          operation-server-interface-configuration:
                                            type: object
                                            required:
                                              - life-cycle-state
                                              - operation-key
                                            properties:
                                              life-cycle-state:
                                                type: string
                                                enum:
                                                  - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                                  - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OPERATIONAL'
                                                  - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_DEPRICATED'
                                                  - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OBSOLETE'
                                                  - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN'
                                                  - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                                              operation-key:
                                                type: string
                                  - description: 'http server'
                                    type: object
                                    required:
                                      - local-id
                                      - layer-protocol-name
                                      - http-server-interface-1-0:http-server-interface-pac
                                    properties:
                                      local-id:
                                        type: string
                                      layer-protocol-name:
                                        type: string
                                        enum:
                                          - 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                          - 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                      http-server-interface-1-0:http-server-interface-pac:
                                        type: object
                                        required:
                                          - http-server-interface-capability
                                        properties:
                                          http-server-interface-capability:
                                            type: object
                                            required:
                                              - application-name
                                              - release-number
                                              - application-purpose
                                              - data-update-period
                                              - owner-name
                                              - owner-email-address
                                              - release-list
                                            properties:
                                              application-name:
                                                type: string
                                              release-number:
                                                type: string
                                              application-purpose:
                                                type: string
                                              data-update-period:
                                                type: string
                                                enum:
                                                  - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_REAL_TIME'
                                                  - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_1H_PERIOD'
                                                  - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_24H_PERIOD'
                                                  - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_MANUAL'
                                              owner-name:
                                                type: string
                                              owner-email-address:
                                                type: string
                                              release-list:
                                                type: array
                                                uniqueItems: true
                                                items:
                                                  type: object
                                                  required:
                                                  - release-number
                                                  - release-date
                                                  - changes
                                                  properties:
                                                    release-number:
                                                      type: string
                                                    release-date:
                                                      type: string
                                                    changes:
                                                      type: string
                                  - description: 'tcp server'
                                    type: object
                                    required:
                                      - local-id
                                      - layer-protocol-name
                                      - tcp-server-interface-1-0:tcp-server-interface-pac
                                    properties:
                                      local-id:
                                        type: string
                                      layer-protocol-name:
                                        type: string
                                        enum:
                                          - 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                          - 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                      tcp-server-interface-1-0:tcp-server-interface-pac:
                                        type: object
                                        required:
                                          - tcp-server-interface-configuration
                                        properties:
                                          tcp-server-interface-configuration:
                                            type: object
                                            required:
                                              - local-address
                                              - local-port
                                            properties:
                                              local-address:
                                                type: object
                                                properties:
                                                  ipv-4-address:
                                                    type: string
                                                    pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                                                  ipv-6-address:
                                                    type: string
                                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                                              local-port:
                                                type: integer
                                                minimum: 0
                                                maximum: 65535
                                  - description: 'operation client'
                                    type: object
                                    required:
                                      - local-id
                                      - layer-protocol-name
                                      - operation-client-interface-1-0:operation-client-interface-pac
                                    properties:
                                      local-id:
                                        type: string
                                      layer-protocol-name:
                                        type: string
                                        enum:
                                          - 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                          - 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                      operation-client-interface-1-0:operation-client-interface-pac:
                                        type: object
                                        required:
                                          - operation-client-interface-configuration
                                          - operation-client-interface-status
                                        properties:
                                          operation-client-interface-configuration:
                                            type: object
                                            required:
                                              - operation-name
                                              - operation-key
                                            properties:
                                              operation-name:
                                                type: string
                                              operation-key:
                                                type: string
                                          operation-client-interface-status:
                                            type: object
                                            required:
                                              - operational-state
                                              - life-cycle-state
                                            properties:
                                              operational-state:
                                                type: string
                                                enum:
                                                  - 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_AVAILABLE'
                                                  - 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_UNAVAILABLE'
                                                  - 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                              life-cycle-state:
                                                type: string
                                                enum:
                                                  - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                                  - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_OPERATIONAL'
                                                  - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_DEPRICATED'
                                                  - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_OBSOLETE'
                                                  - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN'
                                                  - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                                  - description: 'http client'
                                    type: object
                                    required:
                                      - local-id
                                      - layer-protocol-name
                                      - http-client-interface-1-0:http-client-interface-pac
                                    properties:
                                      local-id:
                                        type: string
                                      layer-protocol-name:
                                        type: string
                                        enum:
                                          - 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                          - 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                      http-client-interface-1-0:http-client-interface-pac:
                                        type: object
                                        required:
                                          - http-client-interface-capability
                                          - http-client-interface-configuration
                                        properties:
                                          http-client-interface-capability:
                                            type: object
                                            required:
                                              - application-name
                                            properties:
                                              application-name:
                                                type: string
                                          http-client-interface-configuration:
                                            type: object
                                            required:
                                              - release-number
                                            properties:
                                              release-number:
                                                type: string
                                          http-client-interface-status:
                                            type: object
                                            required:
                                              - approval-status
                                            properties:
                                              approval-status:
                                                type: string
                                                enum:
                                                  - 'http-client-interface-1-0:APPROVAL_STATUS_TYPE_REGISTERED'
                                                  - 'http-client-interface-1-0:APPROVAL_STATUS_TYPE_APPROVED'
                                                  - 'http-client-interface-1-0:APPROVAL_STATUS_TYPE_BARRED'
                                                  - 'http-client-interface-1-0:APPROVAL_STATUS_TYPE_NOT_YET_DEFINED'
                                  - description: 'tcp client'
                                    type: object
                                    required:
                                      - local-id
                                      - layer-protocol-name
                                      - tcp-client-interface-1-0:tcp-client-interface-pac
                                    properties:
                                      local-id:
                                        type: string
                                      layer-protocol-name:
                                        type: string
                                        enum:
                                          - 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                          - 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                          - 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                          - 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                      tcp-client-interface-1-0:tcp-client-interface-pac:
                                        type: object
                                        required:
                                          - tcp-client-interface-configuration
                                        properties:
                                          tcp-client-interface-configuration:
                                            type: object
                                            required:
                                              - remote-address
                                              - remote-port
                                            properties:
                                              local-address:
                                                type: object
                                                minProperties: 1
                                                maxProperties: 1
                                                properties:
                                                  ip-address:
                                                    type: object
                                                    minProperties: 1
                                                    properties:
                                                      ipv-4-address:
                                                        type: string
                                                        pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                                                      ipv-6-address:
                                                        type: string
                                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                                                  domain-name:
                                                    type: string
                                                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$
                                              local-port:
                                                type: integer
                                                minimum: 0
                                                maximum: 65535
                        example:
                          - uuid: 'aa-0-0-1-op-s-0000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/register-yourself'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-0001'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/embed-yourself'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-0002'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/notify-service-requests'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-0003'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/notify-oam-requests'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-0004'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/end-subscription'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-0005'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-2000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/start-application-in-generic-representation'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'n.a.'
                          - uuid: 'aa-0-0-1-op-s-2001'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/inform-about-application'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'n.a.'
                          - uuid: 'aa-0-0-1-op-s-2002'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/inform-about-application-in-generic-representation'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'n.a.'
                          - uuid: 'aa-0-0-1-op-s-2003'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/inform-about-release-history'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'n.a.'
                          - uuid: 'aa-0-0-1-op-s-2004'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/inform-about-release-history-in-generic-representation'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'n.a.'
                          - uuid: 'aa-0-0-1-op-s-3000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/regard-application'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-3001'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/disregard-application'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-op-s-3002'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-server-interface-1-0:operation-server-interface-pac:
                                  operation-server-interface-capability:
                                    operation-name: '/v1/approve-oam-request'
                                  operation-server-interface-configuration:
                                    life-cycle-state: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                                    operation-key: 'Operation key not yet provided.'
                          - uuid: 'aa-0-0-1-http-s-0000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            # Bug in the postman mock server
                            # original code is:
                            # client-ltp: ['aa-0-0-1-op-s-0000', 'aa-0-0-1-op-s-0001', 'aa-0-0-1-op-s-0002', 'aa-0-0-1-op-s-0003', 'aa-0-0-1-op-s-0004', 'aa-0-0-1-op-s-0005', 'aa-0-0-1-op-s-2000', 'aa-0-0-1-op-s-2001', 'aa-0-0-1-op-s-2002', 'aa-0-0-1-op-s-2003', 'aa-0-0-1-op-s-2004', 'aa-0-0-1-op-s-3000', 'aa-0-0-1-op-s-3001', 'aa-0-0-1-op-s-3002']
                            # workaround code is:
                            client-ltp: ['aa-0-0-1-op-s-3000', 'aa-0-0-1-op-s-3001']
                            server-ltp: ['aa-0-0-1-tcp-s-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-server-interface-1-0:http-server-interface-pac:
                                  http-server-interface-capability:
                                    application-name: 'AdministratorAdministration'
                                    release-number: '0.0.1'
                                    application-purpose: 'Authenticates OaM requests.'
                                    data-update-period: 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_REAL_TIME'
                                    owner-name: 'Thorsten Heinze'
                                    owner-email-address: 'Thorsten.Heinze@telefonica.com'
                                    release-list:
                                      - release-number: '0.0.1'
                                        release-date: '27.08.2021'
                                        changes: 'Initial version.'
                          - uuid: 'aa-0-0-1-tcp-s-0000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SOURCE'
                            client-ltp: ['aa-0-0-1-http-s-0000']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-server-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-server-interface-1-0:tcp-server-interface-pac:
                                  tcp-server-interface-configuration:
                                    local-address:
                                      ipv-4-address: '10.118.125.157'
                                    local-port: 1004
                          - uuid: 'aa-0-0-1-op-c-0000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/register-application'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3001'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/end-subscription'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3002'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/notify-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3003'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/notify-withdrawn-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-http-c-0000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            # Bug in the postman mock server
                            # original code is:
                            # client-ltp: ['aa-0-0-1-op-c-0000', 'aa-0-0-1-op-c-3000', 'aa-0-0-1-op-c-3001', 'aa-0-0-1-op-c-3002', 'aa-0-0-1-op-c-3003']
                            # workaround code is:
                            client-ltp: ['aa-0-0-1-op-c-0000', 'aa-0-0-1-op-c-3000']
                            server-ltp: ['aa-0-0-1-tcp-c-0000']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-client-interface-1-0:http-client-interface-pac:
                                  http-client-interface-capability:
                                    application-name: 'RegistryOffice'
                                  http-client-interface-configuration:
                                    release-number: '0.0.1'
                          - uuid: 'aa-0-0-1-tcp-c-0000'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-http-c-0000']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-client-interface-1-0:tcp-client-interface-pac:
                                  tcp-client-interface-configuration:
                                    remote-address:
                                      ip-address:
                                        ipv-4-address: '10.118.125.157'
                                        ipv-6-address: '0:0:0:0:0:0:0:0'
                                      domain-name: 'Not yet defined.'
                                    remote-port: 1000
                          - uuid: 'aa-0-0-1-op-c-3010'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-3010']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-http-c-3010'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-op-c-3010']
                            server-ltp: ['aa-0-0-1-tcp-c-3010']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-client-interface-1-0:http-client-interface-pac:
                                  http-client-interface-capability:
                                    application-name: 'TypeApprovalRegister'
                                  http-client-interface-configuration:
                                    release-number: '0.0.1'
                          - uuid: 'aa-0-0-1-tcp-c-3010'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-http-c-3010']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-client-interface-1-0:tcp-client-interface-pac:
                                  tcp-client-interface-configuration:
                                    remote-address:
                                      ip-address:
                                        ipv-4-address: '10.118.125.157'
                                        ipv-6-address: '0:0:0:0:0:0:0:0'
                                      domain-name: 'Not yet defined.'
                                    remote-port: 1001
                          - uuid: 'aa-0-0-1-op-c-0020'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0020']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/record-service-request'
                                    operation-key: 'Operation key not yet provided.'
                                    detailed-logging-is-on: 'false'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3020'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0020']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-http-c-0020'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-op-c-0020', 'aa-0-0-1-op-c-3020']
                            server-ltp: ['aa-0-0-1-tcp-c-0020']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-client-interface-1-0:http-client-interface-pac:
                                  http-client-interface-capability:
                                    application-name: 'ExecutionAndTraceLog'
                                  http-client-interface-configuration:
                                    release-number: '0.0.1'
                          - uuid: 'aa-0-0-1-tcp-c-0020'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-http-c-0020']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-client-interface-1-0:tcp-client-interface-pac:
                                  tcp-client-interface-configuration:
                                    remote-address:
                                      ip-address:
                                        ipv-4-address: '10.118.125.157'
                                        ipv-6-address: '0:0:0:0:0:0:0:0'
                                      domain-name: 'Not yet defined.'
                                    remote-port: 1002
                          - uuid: 'aa-0-0-1-op-c-0030'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0030']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/record-oam-request'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3030'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0030']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-http-c-0030'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-op-c-0030', 'aa-0-0-1-op-c-3030']
                            server-ltp: ['aa-0-0-1-tcp-c-0030']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-client-interface-1-0:http-client-interface-pac:
                                  http-client-interface-capability:
                                    application-name: 'OamLog'
                                  http-client-interface-configuration:
                                    release-number: '0.0.1'
                          - uuid: 'aa-0-0-1-tcp-c-0030'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-http-c-0030']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-client-interface-1-0:tcp-client-interface-pac:
                                  tcp-client-interface-configuration:
                                    remote-address:
                                      ip-address:
                                        ipv-4-address: '10.118.125.157'
                                        ipv-6-address: '0:0:0:0:0:0:0:0'
                                      domain-name: 'Not yet defined.'
                                    remote-port: 1003
                          - uuid: 'aa-0-0-1-op-c-0040'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0040']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/record-oam-request'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-op-c-3040'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-0040']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-http-c-0040'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-op-c-0040', 'aa-0-0-1-op-c-3040']
                            server-ltp: ['aa-0-0-1-tcp-c-0040']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-client-interface-1-0:http-client-interface-pac:
                                  http-client-interface-capability:
                                    application-name: 'AdministratorAdministration'
                                  http-client-interface-configuration:
                                    release-number: '0.0.1'
                          - uuid: 'aa-0-0-1-tcp-c-0040'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-http-c-0040']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-client-interface-1-0:tcp-client-interface-pac:
                                  tcp-client-interface-configuration:
                                    remote-address:
                                      ip-address:
                                        ipv-4-address: '10.118.125.157'
                                        ipv-6-address: '0:0:0:0:0:0:0:0'
                                      domain-name: 'Not yet defined.'
                                    remote-port: 1004
                          - uuid: 'aa-0-0-1-op-c-3300'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: []
                            server-ltp: ['aa-0-0-1-http-c-3300']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'operation-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_OPERATION_LAYER'
                                operation-client-interface-1-0:operation-client-interface-pac:
                                  operation-client-interface-configuration:
                                    operation-name: '/v1/inquire-oam-request-approvals'
                                    operation-key: 'Operation key not yet provided.'
                                  operation-client-interface-status:
                                    operational-state: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                                    life-cycle-state: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                          - uuid: 'aa-0-0-1-http-c-3300'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-op-c-3300']
                            server-ltp: ['aa-0-0-1-tcp-c-3300']
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'http-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_HTTP_LAYER'
                                http-client-interface-1-0:http-client-interface-pac:
                                  http-client-interface-capability:
                                    application-name: 'CurrentController'
                                  http-client-interface-configuration:
                                    release-number: '0.0.6'
                          - uuid: 'aa-0-0-1-tcp-c-3300'
                            ltp-direction: 'core-model-1-4:TERMINATION_DIRECTION_SINK'
                            client-ltp: ['aa-0-0-1-http-c-3300']
                            server-ltp: []
                            layer-protocol:
                              - local-id: '0'
                                layer-protocol-name: 'tcp-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_TCP_LAYER'
                                tcp-client-interface-1-0:tcp-client-interface-pac:
                                  tcp-client-interface-configuration:
                                    remote-address:
                                      ip-address:
                                        ipv-4-address: '10.118.125.186'
                                        ipv-6-address: '0:0:0:0:0:0:0:0'
                                      domain-name: 'Not yet defined.'
                                    remote-port: 2000
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /core-model-1-4:control-construct/profile-collection/profile={uuid}/admin-profile-1-0:admin-profile-pac/admin-profile-capability/administrator-name:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-admin-p-\d{4}$'
          example: 'aa-0-0-1-admin-p-0000'
    get:
      operationId: getAdminProfileAdministratorName
      summary: 'Returns the name of the administrator'
      tags:
        - AdminProfile
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Administrator name provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - admin-profile-1-0:administrator-name
                properties:
                  admin-profile-1-0:administrator-name:
                    type: string
                    example: 'Thorsten Heinze'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putAdminProfileAdministratorName
      summary: 'Creates a new instance of AdminProfilePac, if not already existing with the given uuid'
      tags:
        - AdminProfile
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - admin-profile-1-0:administrator-name
              properties:
                admin-profile-1-0:administrator-name:
                  type: string
                  example: 'Thorsten Heinze'
      responses:
        '204':
          description: 'AdminProfile with this uuid available'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/profile-collection/profile={uuid}/admin-profile-1-0:admin-profile-pac/admin-profile-configuration/authorization:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-admin-p-\d{4}$'
          example: 'aa-0-0-1-admin-p-0000'
    get:
      operationId: getAdminProfileAuthorization
      summary: 'Returns the configured value of the Authorization code'
      tags:
        - AdminProfile
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Authorization code provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - admin-profile-1-0:authorization
                properties:
                  admin-profile-1-0:authorization:
                    type: string
                    example: ' *** Basic Ath Code *** '
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putAdminProfileAuthorization
      summary: 'Configures the Authorization code'
      tags:
        - AdminProfile
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - admin-profile-1-0:authorization
              properties:
                admin-profile-1-0:authorization:
                  type: string
                  example: ' *** Basic Ath Code *** '
      responses:
        '204':
          description: 'Authorization code configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/profile-collection/profile={uuid}/admin-profile-1-0:admin-profile-pac/admin-profile-configuration/allowed-methods:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-admin-p-\d{4}$'
          example: 'aa-0-0-1-admin-p-0000'
    get:
      operationId: getAdminProfileAllowedMethods
      summary: 'Returns the allowed methods'
      tags:
        - AdminProfile
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Allowed methods provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - admin-profile-1-0:allowed-methods
                properties:
                  admin-profile-1-0:allowed-methods:
                    type: string
                    enum:
                      - 'admin-profile-1-0:ALLOWED_METHODS_TYPE_GET'
                      - 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
                    example: 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putAdminProfileAllowedMethods
      summary: 'Configures the allowed methods'
      tags:
        - AdminProfile
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - admin-profile-1-0:allowed-methods
              properties:
                admin-profile-1-0:allowed-methods:
                  type: string
                  enum:
                    - 'admin-profile-1-0:ALLOWED_METHODS_TYPE_GET'
                    - 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
                  example: 'admin-profile-1-0:ALLOWED_METHODS_TYPE_ALL'
      responses:
        '204':
          description: 'Allowed methods configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-s-\d{4}$'
          example: 'aa-0-0-1-op-s-0000'
    get:
      operationId: getOperationServerOperationName
      summary: 'Returns operation name'
      tags:
        - OperationServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Operation name provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-server-interface-1-0:operation-name
                properties:
                  operation-server-interface-1-0:operation-name:
                    type: string
                    example: '/v1/register-yourself'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-s-\d{4}$'
          example: 'aa-0-0-1-op-s-0000'
    get:
      operationId: getOperationServerLifeCycleState
      summary: 'Returns the configured life cycle state of the operation'
      tags:
        - OperationServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Life cycle state provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-server-interface-1-0:life-cycle-state
                properties:
                  operation-server-interface-1-0:life-cycle-state:
                    type: string
                    enum:
                      - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                      - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OPERATIONAL'
                      - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_DEPRICATED'
                      - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OBSOLETE'
                      - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN'
                      - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                    example: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putOperationServerLifeCycleState
      summary: 'Configures life cycle state'
      tags:
        - OperationServer
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operation-server-interface-1-0:life-cycle-state
              properties:
                operation-server-interface-1-0:life-cycle-state:
                  type: string
                  enum:
                    - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                    - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OPERATIONAL'
                    - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_DEPRICATED'
                    - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OBSOLETE'
                    - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN'
                    - 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                  example: 'operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
      responses:
        '204':
          description: 'Life cycle state configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-s-\d{4}$'
          example: 'aa-0-0-1-op-s-0000'
    get:
      operationId: getOperationServerOperationKey
      summary: 'Returns key for connecting'
      tags:
        - OperationServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Operation key provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-server-interface-1-0:operation-key
                properties:
                  operation-server-interface-1-0:operation-key:
                    type: string
                    example: 'Operation key not yet provided.'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putOperationServerOperationKey
      summary: 'Changes key for connecting'
      tags:
        - OperationServer
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operation-server-interface-1-0:operation-key
              properties:
                operation-server-interface-1-0:operation-key:
                  type: string
                  example: 'Operation key not yet provided.'
      responses:
        '204':
          description: 'Operation key changed'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerApplicationName
      summary: 'Returns application name'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Application name provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:application-name
                properties:
                  http-server-interface-1-0:application-name:
                    type: string
                    example: 'OamLog'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerReleaseNumber
      summary: 'Returns release number'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Release number provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:release-number
                properties:
                  http-server-interface-1-0:release-number:
                    type: string
                    example: '0.0.1'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerApplicationPurpose
      summary: 'Returns application purpose'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Application purpose provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:application-purpose
                properties:
                  http-server-interface-1-0:application-purpose:
                    type: string
                    example: 'Authenticates OaM requests.'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerDataUpdatePeriode
      summary: 'Returns update periode'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Update periode provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:data-update-period
                properties:
                  http-server-interface-1-0:data-update-period:
                    type: string
                    enum:
                      - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_REAL_TIME'
                      - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_1H_PERIOD'
                      - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_24H_PERIOD'
                      - 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_MANUAL'
                    example: 'http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_REAL_TIME'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerOwnerName
      summary: 'Returns owner name'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Owner name provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:owner-name
                properties:
                  http-server-interface-1-0:owner-name:
                    type: string
                    example: 'Thorsten Heinze'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerOwnerEmailAddress
      summary: 'Returns owner email address'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Email address of owner provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:owner-email-address
                properties:
                  http-server-interface-1-0:owner-email-address:
                    type: string
                    example: 'Thorsten.Heinze@telefonica.com'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-s-\d{4}$'
          example: 'aa-0-0-1-http-s-0000'
    get:
      operationId: getHttpServerReleaseList
      summary: 'Returns list of releases'
      tags:
        - HttpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'List of releases provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-server-interface-1-0:release-list
                properties:
                  http-server-interface-1-0:release-list:
                    type: array
                    uniqueItems: true
                    items:
                      type: object
                      required:
                      - release-number
                      - release-date
                      - changes
                      properties:
                        release-number:
                          type: string
                          pattern: ^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$
                        release-date:
                          type: string
                          pattern: ^\s*(3[01]|[12][0-9]|0?[1-9])\.(1[012]|0?[1-9])\.((?:19|20)\d{2})\s*$
                        changes:
                          type: string
                    example:
                      - release-number: '0.0.1'
                        release-date: '16.07.2021'
                        changes: 'Initial version.'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-tcp-s-\d{4}$'
          example: 'aa-0-0-1-tcp-s-0000'
    get:
      operationId: getTcpServerLocalAddress
      summary: 'Returns IP address of the server'
      tags:
        - TcpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Local IP address provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - tcp-server-interface-1-0:local-address
                properties:
                  tcp-server-interface-1-0:local-address:
                    type: object
                    properties:
                      ipv-4-address:
                        type: string
                        pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                        example: '10.118.125.157'
                      ipv-6-address:
                        type: string
                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                        example: '0:0:0:0:0:0:0:0'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putTcpServerLocalAddress
      summary: 'Documents IP address of the server'
      tags:
        - TcpServer
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tcp-server-interface-1-0:local-address
              properties:
                tcp-server-interface-1-0:local-address:
                  type: object
                  minProperties: 1
                  maxProperties: 1
                  properties:
                    ipv-4-address:
                      type: string
                      pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                      example: '10.118.125.157'
                    ipv-6-address:
                      type: string
                      pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                      example: '0:0:0:0:0:0:0:0'
      responses:
        '204':
          description: 'Local IP address documented'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-tcp-s-\d{4}$'
          example: 'aa-0-0-1-tcp-s-0000'
    get:
      operationId: getTcpServerLocalPort
      summary: 'Returns TCP port of the server'
      tags:
        - TcpServer
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Local port provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - tcp-server-interface-1-0:local-port
                properties:
                  tcp-server-interface-1-0:local-port:
                    type: integer
                    minimum: 0
                    maximum: 65535
                    example: 1003
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putTcpServerLocalPort
      summary: 'Documents TCP port of the server'
      tags:
        - TcpServer
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tcp-server-interface-1-0:local-port
              properties:
                tcp-server-interface-1-0:local-port:
                  type: integer
                  minimum: 0
                  maximum: 65535
                  example: 1003
      responses:
        '204':
          description: 'Local port documented'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'  

  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-c-\d{4}$'
          example: 'aa-0-0-1-op-c-0000'
    get:
      operationId: getOperationClientOperationName
      summary: 'Returns operation name'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Operation name provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-client-interface-1-0:operation-name
                properties:
                  operation-client-interface-1-0:operation-name:
                    type: string
                    example: '/v1/register-application'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putOperationClientOperationName
      summary: 'Configures operation name'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operation-client-interface-1-0:operation-name
              properties:
                operation-client-interface-1-0:operation-name:
                  type: string
                  example: '/v1/register-application'
      responses:
        '204':
          description: 'Operation name configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-c-\d{4}$'
          example: 'aa-0-0-1-op-c-0000'
    get:
      operationId: getOperationClientOperationKey
      summary: 'Returns key used for connecting to server.'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Operation key provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-client-interface-1-0:operation-key
                properties:
                  operation-client-interface-1-0:operation-key:
                    type: string
                    example: 'Operation key not yet provided.'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putOperationClientOperationKey
      summary: 'Configures key used for connecting to server.'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operation-client-interface-1-0:operation-key
              properties:
                operation-client-interface-1-0:operation-key:
                  type: string
                  example: 'Operation key not yet provided.'
      responses:
        '204':
          description: 'Operation key configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-c-\d{4}$'
          example: 'aa-0-0-1-op-c-0000'
    get:
      operationId: getOperationClientOperationalState
      summary: 'Returns operational state of the operation'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Operational state provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-client-interface-1-0:operational-state
                properties:
                  operation-client-interface-1-0:operational-state:
                    type: string
                    enum:
                      - 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_AVAILABLE'
                      - 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_UNAVAILABLE'
                      - 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
                    example: 'operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-op-c-\d{4}$'
          example: 'aa-0-0-1-op-c-0000'
    get:
      operationId: getOperationClientLifeCycleState
      summary: 'Returns life cycle state of the operation'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Life cycle state provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-client-interface-1-0:life-cycle-state
                properties:
                  operation-client-interface-1-0:life-cycle-state:
                    type: string
                    enum:
                      - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL'
                      - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_OPERATIONAL'
                      - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_DEPRICATED'
                      - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_OBSOLETE'
                      - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN'
                      - 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
                    example: 'operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_NOT_YET_DEFINED'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point=aa-0-0-1-op-c-0020/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on:
    get:
      operationId: getOperationClientDetailedLoggingIsOn
      summary: 'Returns detailed logging configuration.'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Detailed logging configuration provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - operation-client-interface-1-0:detailed-logging-is-on
                properties:
                  operation-client-interface-1-0:detailed-logging-is-on:
                    type: boolean
                    example: false
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putOperationClientDetailedLoggingIsOn
      summary: 'Configures detailed logging on/off.'
      tags:
        - OperationClient
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operation-client-interface-1-0:detailed-logging-is-on
              properties:
                operation-client-interface-1-0:detailed-logging-is-on:
                  type: boolean
                  example: false
      responses:
        '204':
          description: 'Operation key configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-c-\d{4}$'
          example: 'aa-0-0-1-http-c-0000'
    get:
      operationId: getHttpClientApplicationName
      summary: 'Returns name of application to be addressed'
      tags:
        - HttpClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Addressed application provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-client-interface-1-0:application-name
                properties:
                  http-client-interface-1-0:application-name:
                    type: string
                    example: 'RegistryOffice'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-http-c-\d{4}$'
          example: 'aa-0-0-1-http-c-0000'
    get:
      operationId: getHttpClientReleaseNumber
      summary: 'Returns release number of application to be addressed'
      tags:
        - HttpClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Release number provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - http-client-interface-1-0:release-number
                properties:
                  http-client-interface-1-0:release-number:
                    type: string
                    example: '0.0.1'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putHttpClientReleaseNumber
      summary: 'Configures release number of application to be addressed'
      tags:
        - HttpClient
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                required:
                  - http-client-interface-1-0:release-number
                properties:
                  http-client-interface-1-0:release-number:
                    type: string
                    example: '0.0.1'
      responses:
        '204':
          description: 'Release number configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'  

  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-tcp-c-\d{4}$'
          example: 'aa-0-0-1-tcp-c-0000'
    get:
      operationId: getTcpClientRemoteAddress
      summary: 'Returns remote IP address or hostname'
      tags:
        - TcpClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Remote IP address or hostname provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - tcp-client-interface-1-0:remote-address
                properties:
                  tcp-client-interface-1-0:remote-address:
                    type: object
                    minProperties: 1
                    maxProperties: 1
                    properties:
                      ip-address:
                        type: object
                        minProperties: 1
                        properties:
                          ipv-4-address:
                            type: string
                            pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                            example: '10.118.125.157'
                          ipv-6-address:
                            type: string
                            pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                            example: '0:0:0:0:0:0:0:0'
                      domain-name:
                        type: string
                        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$
                        example: 'Not yet defined.'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putTcpClientRemoteAddress
      summary: 'Configures remote IP address or hostname'
      tags:
        - TcpClient
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tcp-client-interface-1-0:remote-address
              properties:
                tcp-client-interface-1-0:remote-address:
                  type: object
                  minProperties: 1
                  maxProperties: 1
                  properties:
                    ip-address:
                      type: object
                      minProperties: 1
                      properties:
                        ipv-4-address:
                          type: string
                          pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                          example: '10.118.125.157'
                        ipv-6-address:
                          type: string
                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                          example: '0:0:0:0:0:0:0:0'
                    domain-name:
                      type: string
                      pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$
                      example: 'openBackhaul.com'
      responses:
        '204':
          description: 'Remote IP address or hostname configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'  
  /core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port:
    parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
          pattern: '^aa-0-0-1-tcp-c-\d{4}$'
          example: 'aa-0-0-1-tcp-c-0000'
    get:
      operationId: getTcpClientRemotePort
      summary: 'Returns target TCP port at server'
      tags:
        - TcpClient
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Remote port provided'
          content:
            application/json:
              schema:
                type: object
                required:
                  - tcp-client-interface-1-0:remote-port
                properties:
                  tcp-client-interface-1-0:remote-port:
                    type: integer
                    minimum: 0
                    maximum: 65535
                    example: 1000
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'
    put:
      operationId: putTcpClientRemotePort
      summary: 'Configures target TCP port at server'
      tags:
        - TcpClient
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tcp-client-interface-1-0:remote-port
              properties:
                tcp-client-interface-1-0:remote-port:
                  type: integer
                  minimum: 0
                  maximum: 65535
                  example: 1000
      responses:
        '204':
          description: 'Remote port configured'
          headers:
            x-correlator:
              schema: 
                type: string
                example: '550e8400-e29b-11d4-a716-446655440000'
              description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
            exec-time:
              schema:
                type: integer
                example: 1100
              description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
            backend-time:
              schema:
                type: integer
                example: 850
              description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
        '400':
          $ref: '#/components/responses/invalidSyntax'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notfound'
        '500':
          $ref: '#/components/responses/serverError'
        default:
          $ref: '#/components/responses/default'

########################################
#   Common Components
########################################
components:
  parameters:
    user:
      name: user
      in: header
      required: true
      schema: 
        type: string
        example: 'User Name'
      description: 'User identifier from the system starting the service call'
    originator:
      name: originator
      in: header
      required: true
      schema: 
        type: string
        example: 'Resolver'
      description: >
        'Identification for the system consuming the API, as defined in
         [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-capability/application-name]'
    x-correlator:
      name: x-correlator
      in: header
      required: true
      schema: 
        type: string
        pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
        example: '550e8400-e29b-11d4-a716-446655440000'
      description: 'UUID for the service execution flow that allows to correlate requests and responses'
    trace-indicator:
      name: trace-indicator
      in: header
      required: true
      schema: 
        type: string
        example: '1.3.1'
      description: 'Sequence of request numbers along the flow'
    customer-journey:
      name: customer-journey
      in: header
      required: true
      schema: 
        type: string
        example: 'Unknown value'
      description: 'Holds information supporting customerâ€™s journey to which the execution applies'
  responses:
    invalidSyntax:
      description: 'The server could not understand the request due to invalid syntax'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        x-correlator:
          schema: 
            type: string
            example: '550e8400-e29b-11d4-a716-446655440000'
          description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
        exec-time:
          schema:
            type: integer
            example: 1100
          description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
        backend-time:
          schema:
            type: integer
            example: 850
          description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
    unauthorized:
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        x-correlator:
          schema: 
            type: string
            example: '550e8400-e29b-11d4-a716-446655440000'
          description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
        exec-time:
          schema:
            type: integer
            example: 1100
          description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
        backend-time:
          schema:
            type: integer
            example: 850
          description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
    forbidden:
      description: 'Forbidden'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        x-correlator:
          schema: 
            type: string
            example: '550e8400-e29b-11d4-a716-446655440000'
          description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
        exec-time:
          schema:
            type: integer
            example: 1100
          description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
        backend-time:
          schema:
            type: integer
            example: 850
          description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
    notfound:
      description: 'Not Found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        x-correlator:
          schema: 
            type: string
            example: '550e8400-e29b-11d4-a716-446655440000'
          description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
        exec-time:
          schema:
            type: integer
            example: 1100
          description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
        backend-time:
          schema:
            type: integer
            example: 850
          description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
    serverError:
      description: 'Internal server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        x-correlator:
          schema: 
            type: string
            example: '550e8400-e29b-11d4-a716-446655440000'
          description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
        exec-time:
          schema:
            type: integer
            example: 1100
          description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
        backend-time:
          schema:
            type: integer
            example: 850
          description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
    default:
      description: 'Unexpected error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        x-correlator:
          schema: 
            type: string
            example: '550e8400-e29b-11d4-a716-446655440000'
          description: 'UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request'
        exec-time:
          schema:
            type: integer
            example: 1100
          description: 'Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds'
        backend-time:
          schema:
            type: integer
            example: 850
          description: 'Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database accessâ€¦). Expressed in milliseconds'
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: operation-key
    basicAuth:
      type: http
      scheme: basic
